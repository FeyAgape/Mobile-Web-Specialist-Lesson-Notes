Accessibility of Web content requires semantic information about user input widgets, structures and behaviours to allow assited technologies to convey appropaite information to people with disabilities.

You can make a website accessible using

Sensibile DOM order
focus to give a good keyboard experience
native elements eg button elements for buttons, has a built in semantic, to present a customized interface
Labeling controls and images eg alt for images and labels for input and forms elements
Pge structures usig heading and other semantic HTML

ARIA or WAI-ARIA =settings for screen readers

Aria properties 
aria-live
aria-hidden
aria-label
aria-stsize
aria-posinset
aria-labelby
aria-owned
aria-checked
arai-pressed
aria-describedby, etc.

focus styling
eg1

button:hover,
button:focus {
	background: #E91E63;
	color: #fff;
	text-decoration: underline;
}
button:focus {
	outline: 0;
	box-shadow: 0 0 8px 3px rgba(255, 255, 255, 0.8);
}

eg 2
button:focus {
	outlinr:0;
}
button:focus::before {
	box-shadow: 0 0 1px 2px #5b9dd9;
}

Responsive meta
<meta name="viewport" content="width=device-width,initial-scale=1">